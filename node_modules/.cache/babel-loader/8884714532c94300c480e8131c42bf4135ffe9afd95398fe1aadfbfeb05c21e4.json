{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const productApi = createApi({\n  reducerPath: 'productApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3001/products'\n  }),\n  endpoints: builder => ({\n    getProductList: builder.query({\n      query: () => ``\n    }),\n    addProduct: builder.mutation({\n      query: product => ({\n        url: '',\n        method: 'POST',\n        body: product\n      })\n    }),\n    editProduct: builder.mutation({\n      query: _ref => {\n        let {\n          id,\n          ...product\n        } = _ref;\n        return {\n          url: `/${id}`,\n          method: 'POST',\n          body: product\n        };\n      }\n    }),\n    deleteProduct: builder.mutation({\n      query: product => ({\n        url: '',\n        method: 'POST',\n        body: product\n      })\n    })\n  })\n});\nexport const {\n  useGetProductListQuery,\n  useAddProductMutation\n} = productApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","productApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getProductList","query","addProduct","mutation","product","url","method","body","editProduct","_ref","id","deleteProduct","useGetProductListQuery","useAddProductMutation"],"sources":["/Users/hoangthang/Desktop/ph12345_web209/src/toolkit/product/product.service.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { IProduct } from './product.interface'\n\nexport const productApi = createApi({\n    reducerPath : 'productApi',\n    baseQuery : fetchBaseQuery({ baseUrl :'http://localhost:3001/products'}),\n    endpoints :(builder)=> ({\n        getProductList : builder.query({\n            query: () => ``\n        }),\n        addProduct : builder.mutation<IProduct[],IProduct>({\n            query:(product)=> ({\n                url:'',\n                method: 'POST',\n                body : product\n            })\n        }),\n        editProduct : builder.mutation<IProduct[],IProduct>({\n            query:({id,...product})=> ({\n                url:`/${id}`,\n                method: 'POST',\n                body : product\n            })\n        }),\n        deleteProduct : builder.mutation<IProduct[],IProduct>({\n            query:(product)=> ({\n                url:'',\n                method: 'POST',\n                body : product\n            })\n        })\n    })\n})\n\nexport const { useGetProductListQuery,useAddProductMutation } =  productApi;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAG,YAAY;EAC1BC,SAAS,EAAGH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAgC,CAAC,CAAC;EACxEC,SAAS,EAAGC,OAAO,KAAK;IACpBC,cAAc,EAAGD,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAEA,CAAA,KAAO;IAClB,CAAC,CAAC;IACFC,UAAU,EAAGH,OAAO,CAACI,QAAQ,CAAsB;MAC/CF,KAAK,EAAEG,OAAO,KAAK;QACfC,GAAG,EAAC,EAAE;QACNC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAGH;MACX,CAAC;IACL,CAAC,CAAC;IACFI,WAAW,EAAGT,OAAO,CAACI,QAAQ,CAAsB;MAChDF,KAAK,EAACQ,IAAA;QAAA,IAAC;UAACC,EAAE;UAAC,GAAGN;QAAO,CAAC,GAAAK,IAAA;QAAA,OAAK;UACvBJ,GAAG,EAAE,IAAGK,EAAG,EAAC;UACZJ,MAAM,EAAE,MAAM;UACdC,IAAI,EAAGH;QACX,CAAC;MAAA;IACL,CAAC,CAAC;IACFO,aAAa,EAAGZ,OAAO,CAACI,QAAQ,CAAsB;MAClDF,KAAK,EAAEG,OAAO,KAAK;QACfC,GAAG,EAAC,EAAE;QACNC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAGH;MACX,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,sBAAsB;EAACC;AAAsB,CAAC,GAAInB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}