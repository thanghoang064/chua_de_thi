{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { productApi } from './product/product.service';\nimport productSlice from './product/productSlice';\nexport const store = configureStore({\n  reducer: {\n    [productApi.reducerPath]: productApi.reducer,\n    products: productSlice\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(productApi.middleware)\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","productApi","productSlice","store","reducer","reducerPath","products","middleware","getDefaultMiddleware","concat"],"sources":["/Users/hoangthang/Desktop/ph12345_web209/src/toolkit/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { productApi } from './product/product.service'\nimport productSlice from './product/productSlice'\n\n\nexport const store = configureStore({\n  reducer: {\n     [productApi.reducerPath]: productApi.reducer,\n     products: productSlice\n  },\n   middleware: (getDefaultMiddleware) =>\n     getDefaultMiddleware().concat(productApi.middleware),\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAOC,YAAY,MAAM,wBAAwB;AAGjD,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACN,CAACH,UAAU,CAACI,WAAW,GAAGJ,UAAU,CAACG,OAAO;IAC5CE,QAAQ,EAAEJ;EACb,CAAC;EACAK,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACR,UAAU,CAACM,UAAU;AACxD,CAAC,CAAC;;AAEF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}